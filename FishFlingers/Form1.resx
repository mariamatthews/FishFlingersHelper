<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="slimCheckBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>